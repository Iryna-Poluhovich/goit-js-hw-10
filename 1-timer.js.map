{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nlet timerId = null;\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const timeDiff = userSelectedDate - new Date();\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      input.disabled = false;\n      return;\n    }\n    const time = convertMs(timeDiff);\n    updateTimer(time);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = days;\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n"],"names":["startButton","input","timerId","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","timeDiff","updateTimer","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"2GAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAQ,SAAS,cAAc,kBAAkB,EACvD,IAAIC,EAAU,KACVC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,EACDP,EAAY,SAAW,KAEvBG,EAAmBG,EACnBN,EAAY,SAAW,GAE1B,CACH,EAEAQ,EAAUP,EAAOG,CAAO,EAExBJ,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAM,SAAW,GAEjBC,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAWN,EAAmB,IAAI,KACxC,GAAIM,GAAY,EAAG,CACjB,cAAcP,CAAO,EACrBQ,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDT,EAAM,SAAW,GACjB,MACD,CACD,MAAMU,EAAOC,EAAUH,CAAQ,EAC/BC,EAAYC,CAAI,CACjB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcH,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CAC1B"}